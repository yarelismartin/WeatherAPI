// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WeatherAPI.Data;

#nullable disable

namespace WeatherAPI.Migrations
{
    [DbContext(typeof(WeatherAPIDbContext))]
    [Migration("20250515032529_UpdatedFavoritesModel")]
    partial class UpdatedFavoritesModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LocationUser", b =>
                {
                    b.Property<int>("FavoriteLocationsId")
                        .HasColumnType("integer");

                    b.Property<int>("FavoritedByUsersId")
                        .HasColumnType("integer");

                    b.HasKey("FavoriteLocationsId", "FavoritedByUsersId");

                    b.HasIndex("FavoritedByUsersId");

                    b.ToTable("LocationUser");
                });

            modelBuilder.Entity("WeatherAPI.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "New York City"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Los Angeles"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Chicago"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Houston"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Miami"
                        });
                });

            modelBuilder.Entity("WeatherAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "john_doe@gmail.com",
                            PasswordHash = "hashedPassword123",
                            Username = "john_doe"
                        },
                        new
                        {
                            Id = 2,
                            Email = "jane_smith@gmail.com",
                            PasswordHash = "hashedPassword456",
                            Username = "jane_smith"
                        },
                        new
                        {
                            Id = 3,
                            Email = "alex_jones@gmail.com",
                            PasswordHash = "hashedPassword789",
                            Username = "alex_jones"
                        });
                });

            modelBuilder.Entity("LocationUser", b =>
                {
                    b.HasOne("WeatherAPI.Models.Location", null)
                        .WithMany()
                        .HasForeignKey("FavoriteLocationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeatherAPI.Models.User", null)
                        .WithMany()
                        .HasForeignKey("FavoritedByUsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
