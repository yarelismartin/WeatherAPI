// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WeatherAPI.Data;

#nullable disable

namespace WeatherAPI.Migrations
{
    [DbContext(typeof(WeatherAPIDbContext))]
    partial class WeatherAPIDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WeatherAPI.Models.Favorites", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Favorites");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Location = "New York",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Location = "London",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Location = "Sydney",
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            Location = "Paris",
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            Location = "Tokyo",
                            UserId = 3
                        },
                        new
                        {
                            Id = 6,
                            Location = "Berlin",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("WeatherAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = "hashedPassword123",
                            Username = "john_doe"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = "hashedPassword456",
                            Username = "jane_smith"
                        },
                        new
                        {
                            Id = 3,
                            PasswordHash = "hashedPassword789",
                            Username = "alex_jones"
                        });
                });

            modelBuilder.Entity("WeatherAPI.Models.Favorites", b =>
                {
                    b.HasOne("WeatherAPI.Models.User", "User")
                        .WithMany("Favorites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WeatherAPI.Models.User", b =>
                {
                    b.Navigation("Favorites");
                });
#pragma warning restore 612, 618
        }
    }
}
